//Среда разработки: Atmel Studio 6, язык программирования - С.
//Скриншот результата выполнения программы в отладчике прикреплен.

#include <avr/io.h>

void Big_endian_to_Little_endian(char *big_endian, char *little_endian);
//--------------------------------------------------------------------------------------------------------------------------------------------//
unsigned char big_endian_array[8] = {0x01,0x23,0x45,0x67,0x89,0xAB,0xCD,0xEF};//вводим 64-битное число big-endian 0x0123456789ABCDEF
//данные в этот массив можно вводить, например, с клавиатуры, но для проверки фрагмента кода я ввёл число программно
//старший байт имеет значение 0х01, младший (нулевой) - 0xEF
unsigned char little_endian_array[8];//в этот массив будет записано конвертированное число	


void Big_endian_to_Little_endian(char *big_endian, char *little_endian)
{
	unsigned char i;
	for (i = 0; i < 8; i++) 
		{
		little_endian[7-i]=big_endian[i];
		}
}


int main(void)
{
	//чтобы преобразовать big-endian в little-endian необходимо записать байты в обратном порядке,
	//для этого используем следующую функцию: 
	Big_endian_to_Little_endian(big_endian_array, little_endian_array);
	//в результате работы программы в отладчике в массив little_endian_array было записано преобразованное 
	//число little-endian: 0xEFCDAB8967452301
	
    while(1)
    {
	//замкнутый цикл
    }
}
